Ext.data.JsonP.Autolinker_matcher_UrlMatcher({"tagname":"class","name":"Autolinker.matcher.UrlMatcher","autodetected":{},"files":[{"filename":"url-matcher.js","href":"url-matcher.html#Autolinker-matcher-UrlMatcher"}],"private":true,"members":[{"name":"decodePercentEncoding","tagname":"cfg","owner":"Autolinker.matcher.UrlMatcher","id":"cfg-decodePercentEncoding","meta":{"required":true}},{"name":"hashtagServiceName","tagname":"cfg","owner":"Autolinker.matcher.UrlMatcher","id":"cfg-hashtagServiceName","meta":{}},{"name":"mentionServiceName","tagname":"cfg","owner":"Autolinker.matcher.UrlMatcher","id":"cfg-mentionServiceName","meta":{}},{"name":"stripPrefix","tagname":"cfg","owner":"Autolinker.matcher.UrlMatcher","id":"cfg-stripPrefix","meta":{"required":true}},{"name":"stripTrailingSlash","tagname":"cfg","owner":"Autolinker.matcher.UrlMatcher","id":"cfg-stripTrailingSlash","meta":{"required":true}},{"name":"constructor","tagname":"method","owner":"Autolinker.matcher.UrlMatcher","id":"method-constructor","meta":{}},{"name":"excludeUnbalancedTrailingBracesAndPunctuation","tagname":"method","owner":"Autolinker.matcher.UrlMatcher","id":"method-excludeUnbalancedTrailingBracesAndPunctuation","meta":{}},{"name":"parseMatches","tagname":"method","owner":"Autolinker.matcher.UrlMatcher","id":"method-parseMatches","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Autolinker.matcher.UrlMatcher","short_doc":"Matcher to find URL matches in an input string. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/url-matcher.html#Autolinker-matcher-UrlMatcher' target='_blank'>url-matcher.js</a></div></pre><div class='doc-contents'><div class='rounded-box private-box'><p><strong>NOTE:</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p></div><p>Matcher to find URL matches in an input string.</p>\n\n<p>RFC for URLs: https://tools.ietf.org/html/rfc3986</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Required config options</h3><div id='cfg-decodePercentEncoding' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.matcher.UrlMatcher'>Autolinker.matcher.UrlMatcher</span><br/><a href='source/url-matcher.html#Autolinker-matcher-UrlMatcher-cfg-decodePercentEncoding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.matcher.UrlMatcher-cfg-decodePercentEncoding' class='name expandable'>decodePercentEncoding</a> : Boolean<span class=\"signature\"><span class='required' >required</span></span></div><div class='description'><div class='short'>true to decode percent-encoded characters in URL matches, false to keep\n the percent-encoded characters. ...</div><div class='long'><p><code>true</code> to decode percent-encoded characters in URL matches, <code>false</code> to keep\n the percent-encoded characters.</p>\n\n<p> Example when <code>true</code>: <code>https://en.wikipedia.org/wiki/San_Jos%C3%A9</code> will\n be displayed as <code>https://en.wikipedia.org/wiki/San_Jos√©</code>.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-stripPrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.matcher.UrlMatcher'>Autolinker.matcher.UrlMatcher</span><br/><a href='source/url-matcher.html#Autolinker-matcher-UrlMatcher-cfg-stripPrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.matcher.UrlMatcher-cfg-stripPrefix' class='name expandable'>stripPrefix</a> : Object<span class=\"signature\"><span class='required' >required</span></span></div><div class='description'><div class='short'>The Object form of Autolinker.stripPrefix. ...</div><div class='long'><p>The Object form of <a href=\"#!/api/Autolinker-cfg-stripPrefix\" rel=\"Autolinker-cfg-stripPrefix\" class=\"docClass\">Autolinker.stripPrefix</a>.</p>\n<p>Defaults to: <code>{scheme: true, www: true}</code></p></div></div></div><div id='cfg-stripTrailingSlash' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.matcher.UrlMatcher'>Autolinker.matcher.UrlMatcher</span><br/><a href='source/url-matcher.html#Autolinker-matcher-UrlMatcher-cfg-stripTrailingSlash' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.matcher.UrlMatcher-cfg-stripTrailingSlash' class='name expandable'>stripTrailingSlash</a> : Boolean<span class=\"signature\"><span class='required' >required</span></span></div><div class='description'><div class='short'>true to remove the trailing slash from URL matches, false to keep\n the trailing slash. ...</div><div class='long'><p><code>true</code> to remove the trailing slash from URL matches, <code>false</code> to keep\n the trailing slash.</p>\n\n<p> Example when <code>true</code>: <code>http://google.com/</code> will be displayed as\n <code>http://google.com</code>.</p>\n<p>Defaults to: <code>true</code></p></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Optional config options</h3><div id='cfg-hashtagServiceName' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.matcher.UrlMatcher'>Autolinker.matcher.UrlMatcher</span><br/><a href='source/url-matcher.html#Autolinker-matcher-UrlMatcher-cfg-hashtagServiceName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.matcher.UrlMatcher-cfg-hashtagServiceName' class='name expandable'>hashtagServiceName</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A string for the service name to have hashtags (ex: \"#myHashtag\")\nauto-linked to. ...</div><div class='long'><p>A string for the service name to have hashtags (ex: \"#myHashtag\")\nauto-linked to. The currently-supported values are:</p>\n\n<ul>\n<li>'twitter'</li>\n<li>'facebook'</li>\n<li>'instagram'</li>\n<li>'tiktok'</li>\n</ul>\n\n<p>Defaults to: <code>&#39;twitter&#39;</code></p></div></div></div><div id='cfg-mentionServiceName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.matcher.UrlMatcher'>Autolinker.matcher.UrlMatcher</span><br/><a href='source/url-matcher.html#Autolinker-matcher-UrlMatcher-cfg-mentionServiceName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.matcher.UrlMatcher-cfg-mentionServiceName' class='name expandable'>mentionServiceName</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A string for the service name to have mentions (ex: \"@myuser\")\nauto-linked to. ...</div><div class='long'><p>A string for the service name to have mentions (ex: \"@myuser\")\nauto-linked to. The currently supported values are:</p>\n\n<ul>\n<li>'twitter'</li>\n<li>'instagram'</li>\n<li>'soundcloud'</li>\n<li>'tiktok'</li>\n</ul>\n\n<p>Defaults to: <code>&#39;twitter&#39;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.matcher.UrlMatcher'>Autolinker.matcher.UrlMatcher</span><br/><a href='source/url-matcher.html#Autolinker-matcher-UrlMatcher-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Autolinker.matcher.UrlMatcher-method-constructor' class='name expandable'>Autolinker.matcher.UrlMatcher</a>( <span class='pre'>cfg</span> ) : <a href=\"#!/api/Autolinker.matcher.UrlMatcher\" rel=\"Autolinker.matcher.UrlMatcher\" class=\"docClass\">Autolinker.matcher.UrlMatcher</a><span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cfg</span> : Object<div class='sub-desc'><p>The configuration properties for the Match instance,\n  specified in an Object (map).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Autolinker.matcher.UrlMatcher\" rel=\"Autolinker.matcher.UrlMatcher\" class=\"docClass\">Autolinker.matcher.UrlMatcher</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-excludeUnbalancedTrailingBracesAndPunctuation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.matcher.UrlMatcher'>Autolinker.matcher.UrlMatcher</span><br/><a href='source/url-matcher.html#Autolinker-matcher-UrlMatcher-method-excludeUnbalancedTrailingBracesAndPunctuation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.matcher.UrlMatcher-method-excludeUnbalancedTrailingBracesAndPunctuation' class='name expandable'>excludeUnbalancedTrailingBracesAndPunctuation</a>( <span class='pre'>matchedText</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if a match found has unmatched closing parenthesis,\nsquare brackets or curly brackets. ...</div><div class='long'><p>Determines if a match found has unmatched closing parenthesis,\nsquare brackets or curly brackets. If so, these unbalanced symbol(s) will be\nremoved from the URL match itself.</p>\n\n<p>A match may have an extra closing parenthesis/square brackets/curly brackets\nat the end of the match because these are valid URL path characters. For\nexample, \"wikipedia.com/something_(disambiguation)\" should be auto-linked.</p>\n\n<p>However, an extra parenthesis <em>will</em> be included when the URL itself is\nwrapped in parenthesis, such as in the case of:</p>\n\n<pre><code>\"(wikipedia.com/something_(disambiguation))\"\n</code></pre>\n\n<p>In this case, the last closing parenthesis should <em>not</em> be part of the\nURL itself, and this method will exclude it from the returned URL.</p>\n\n<p>For square brackets in URLs such as in PHP arrays, the same behavior as\nparenthesis discussed above should happen:</p>\n\n<pre><code>\"[http://www.example.com/foo.php?bar[]=1&amp;bar[]=2&amp;bar[]=3]\"\n</code></pre>\n\n<p>The very last closing square bracket should not be part of the URL itself,\nand therefore this method will remove it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>matchedText</span> : Object<div class='sub-desc'><p>The full matched URL/email/hashtag/etc. from the state\n  machine parser.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The updated matched text with extraneous suffix characters removed.</p>\n</div></li></ul></div></div></div><div id='method-parseMatches' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Autolinker.matcher.UrlMatcher'>Autolinker.matcher.UrlMatcher</span><br/><a href='source/url-matcher.html#Autolinker-matcher-UrlMatcher-method-parseMatches' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Autolinker.matcher.UrlMatcher-method-parseMatches' class='name expandable'>parseMatches</a>( <span class='pre'>text</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>General description of this algorithm: state machine parser that reads a\nsingle character at a time and keeps track o...</div><div class='long'><p>General description of this algorithm: state machine parser that reads a\nsingle character at a time and keeps track of if the current character is\nwithin a URL or not.</p>\n\n<p>In order to handle trailing characters of a URL such as '.' and '-' that\ncould also be part of a longer URL, we keep track of the last confirmed\nURL character (such as a letter character). If we then discover that the\ntrailing '.' or '-' was followed by whitespace, we'll only take the\ncharacters up to the last confirmed URL character.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object<div class='sub-desc'></div></li></ul></div></div></div></div></div></div></div>","meta":{"private":true}});